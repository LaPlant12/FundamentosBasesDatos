--script para crear la BD banco (screenshot en drive)
--fecha de creación 17 nov 2020
--fecha de ult mod 30 nov 2020
--autor: David Garcia Leon; lista=10
--TECNM ITL
-- Torreon coah

--creación de BD

CREATE DATABASE BANCO
GO
--poner en uso o abrir la BD:
USE BANCO
GO
--CREAR TABLAS

--CREAR LA TABLA CLIENTE
CREATE TABLE CLIENTE
(
	ID_CLIENTE SMALLINT,
	NOMBRE_CLIENTE VARCHAR(15),
	CALLE_CLIENTE VARCHAR(10),
	CIUDAD_CLIENTE CHAR(10),
	PRIMARY KEY (ID_CLIENTE)
)
GO
--CREAR LA TABLA CUENTA
CREATE TABLE CUENTA
(
	NUMERO_CUENTA VARCHAR(5),
	SALDO MONEY,
	PRIMARY KEY(NUMERO_CUENTA)
)
GO
--CREAR TABLA DE RELACION CLIENTE Y CUENTA
CREATE TABLE CLI_CUENTA
(
	ID_CLIENTE SMALLINT,
	NUMERO_CUENTA VARCHAR(5),
	FECHA_APERTURA DATE
	PRIMARY KEY(ID_CLIENTE, NUMERO_CUENTA)
)
GO
--definir restricciones (contraints) a la tabla cli_cuenta ya que tiene 2 llaves foráneas
--ID_CLIENTE y NUMEROCUENTA, por lo tanto definir 2 contraints

--1a restricción fk_idcliente (nombre del contraint): La llave foránea ID CLIENTE viende de la tabla CLIENTE

ALTER TABLE CLI_CUENTA
ADD CONSTRAINT fk_idcliente
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE) --ID_CLIENTE en CLI_CUENTA es foránea
GO
--2a restricción
ALTER TABLE CLI_CUENTA
ADD CONSTRAINT fk_numerocuenta
FOREIGN KEY (NUMERO_CUENTA) REFERENCES CUENTA(NUMERO_CUENTA)
GO
--para borrar una tabla en caso de haber tenido algun error se usa el comando: drop table nombreTabla
--insertar datos en BD (hay mutiples formas)

--clientes
INSERT INTO CLIENTE
VALUES (746,'Gonzalez','Arenal','La Granja')
GO

INSERT INTO CLIENTE
VALUES (374, 'Gomez','Carretas','Cerceda')
GO

INSERT INTO CLIENTE
VALUES (901,'Lopez','Mayor','Peguerinos')
GO
INSERT INTO CLIENTE
VALUES (609, 'Abril','Preciados','Valsain')
GO
INSERT INTO CLIENTE
VALUES (312, 'Santos','Mayor','Peguerinos')
GO
INSERT INTO CLIENTE
VALUES (999,'Ruperez','Ramblas','Leon')
GO

--cuentas
INSERT INTO CUENTA
VALUES ('C-101',500)

INSERT INTO CUENTA
VALUES ('C-215',700)

INSERT INTO CUENTA
VALUES ('C-102',400)

INSERT INTO CUENTA
VALUES ('C-305',350)

INSERT INTO CUENTA
VALUES ('C-201',900)

INSERT INTO CUENTA
VALUES ('C-217',750)

INSERT INTO CUENTA
VALUES ('C-222',700)

SELECT * FROM CUENTA

--CLI_CUENTA

INSERT INTO CLI_CUENTA
VALUES (746,'C-101','12/20/2019')

INSERT INTO CLI_CUENTA
VALUES (746,'C-201','10/24/2019')

INSERT INTO CLI_CUENTA
VALUES (374,'C-215','4/10/2019')

INSERT INTO CLI_CUENTA
VALUES (901,'C-102','5/12/2019')

INSERT INTO CLI_CUENTA
VALUES (609,'C-305','4/10/2019')

INSERT INTO CLI_CUENTA
VALUES (312,'C-217','2/8/2019')

INSERT INTO CLI_CUENTA
VALUES (999,'C-222','7/3/2019')

INSERT INTO CLI_CUENTA
VALUES (374,'C-201','4/13/2019')

--Mostrar informacion
select * from CLI_CUENTA
select * from CLIENTE
SELECT * FROM CUENTA 

--PARTE 2: AÑADIR PRESTAMOS
CREATE TABLE PRESTAMO
(
	NUMERO_PRESTAMO VARCHAR(4),
	IMPORTE MONEY,
	PRIMARY KEY(NUMERO_PRESTAMO)
)

CREATE TABLE CLI_PREST
(
	ID_CLIENTE SMALLINT,
	NUMERO_PRESTAMO VARCHAR(4),
	FECHA_PRESTAMO DATE,
	PRIMARY KEY(ID_CLIENTE,NUMERO_PRESTAMO)
)

ALTER TABLE CLI_PREST
ADD CONSTRAINT FK_ID_CLIENTE
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)

ALTER TABLE CLI_PREST
ADD CONSTRAINT FK_NUMERO_PRESTAMO
FOREIGN KEY (NUMERO_PRESTAMO) REFERENCES PRESTAMO(NUMERO_PRESTAMO)

--INSERTAR VALORES A PRESTAMO
INSERT INTO PRESTAMO
VALUES('P-11', 900)

INSERT INTO PRESTAMO
VALUES('P-14',1500)

INSERT INTO PRESTAMO
VALUES('P-15', 1500)

INSERT INTO PRESTAMO
VALUES('P-17',1000)

INSERT INTO PRESTAMO
VALUES('P-23',2000)

INSERT INTO PRESTAMO
VALUES('P-93',500)

--INSERTAR VALORES A CLI_PREST
INSERT INTO CLI_PREST
VALUES(609,'P-93','11/20/2019')

INSERT INTO CLI_PREST
VALUES(312, 'P-15','11/21/2019')

INSERT INTO CLI_PREST
VALUES(746,'P-14','11/13/2019')

INSERT INTO CLI_PREST
VALUES(374, 'P-17','11/10/2019')

INSERT INTO CLI_PREST
VALUES(901, 'P-11','11/22/2019')

INSERT INTO CLI_PREST
VALUES(609,'P-23','11/20/2019')


--ACTUALIZAR TUPLAS
UPDATE CLIENTE 
SET CIUDAD_CLIENTE = 'Vaisain' 
WHERE CIUDAD_CLIENTE LIKE 'Valsain'

--1 mostrar nombre y calle de clientes que viven en Cerceda
SELECT NOMBRE_CLIENTE, CALLE_CLIENTE
FROM CLIENTE
WHERE CIUDAD_CLIENTE LIKE 'Peguerinos'

--2 nombre de los clientes cuyo nombre empieza con la letra G
SELECT NOMBRE_CLIENTE
FROM CLIENTE
WHERE NOMBRE_CLIENTE LIKE 'G%'

--3 cuentas cuyo saldo es mayor o igual a 500
SELECT NUMERO_CUENTA, SALDO
FROM CUENTA
WHERE SALDO >= 500
--4 prestamos cuyo importe esta entre 100 y 200
SELECT NUMERO_PRESTAMO, IMPORTE
FROM PRESTAMO
WHERE IMPORTE >= 100 AND IMPORTE <=2000
--5 calle donde vive el cliente lopez
SELECT CALLE_CLIENTE
FROM CLIENTE
WHERE NOMBRE_CLIENTE LIKE 'Lopez'
--6 id y nombre de los clientes que viven en la calle carretas
SELECT ID_CLIENTE
FROM CLIENTE
WHERE CALLE_CLIENTE LIKE 'carretas'
--7 no de prestamos que se otorgaron la primera quincena de nov 2019
SELECT NUMERO_PRESTAMO
FROM CLI_PREST
WHERE FECHA_PRESTAMO BETWEEN '2019-11-01' AND '2019-11-15'
--8 ID y nombre de cliente cuya cuenta tiene un saldo de 400 (SUBCONSULTA)
SELECT NOMBRE_CLIENTE, ID_CLIENTE
FROM CLIENTE
WHERE ID_CLIENTE LIKE
		(SELECT ID_CLIENTE
		FROM CLI_CUENTA
		WHERE NUMERO_CUENTA LIKE
					(SELECT NUMERO_CUENTA
					FROM CUENTA
					WHERE SALDO = 400))
--9 nombre y ciudad de clientes que no viven en peguerinos (not like)
SELECT NOMBRE_CLIENTE, CIUDAD_CLIENTE
FROM CLIENTE
WHERE CIUDAD_CLIENTE NOT LIKE 'peguerinos'
--10 ID clientes que tienen un prestamo y TAMBIEN tienen una cuenta
SELECT DISTINCT(ID_CLIENTE)
FROM CLI_CUENTA 
WHERE ID_CLIENTE IN (SELECT ID_CLIENTE FROM CLI_PREST)
--opcion 2
SELECT DISTINCT CLI_CUENTA.ID_CLIENTE
FROM CLI_CUENTA, CLI_PREST
WHERE CLI_CUENTA.ID_CLIENTE = CLI_PREST.ID_CLIENTE
--11.- NOMBRE DE LOS CLIENTES QUE TIENEN PRESTAMOS CON FEHAS DE LA ULTIMA SEMANA DE NOVIEMBRE DEL 2019:B
SELECT NOMBRE_CLIENTE
FROM CLIENTE
WHERE ID_CLIENTE LIKE (SELECT ID_CLIENTE	
						FROM CLI_PREST
						WHERE FECHA_PRESTAMO BETWEEN '2019-11-23' AND '2020-11-30')
--12.- NOMBRE Y CALLE DE LOS CLIENTES CUYO PRESTAMO ESTE ENTRE 1500 Y 2000 SIN USAR BETWEEN
SELECT NOMBRE_CLIENTE
FROM CLIENTE
WHERE ID_CLIENTE IN
(SELECT ID_CLIENTE 
FROM CLI_PREST 
WHERE NUMERO_PRESTAMO IN
(SELECT NUMERO_PRESTAMO FROM PRESTAMO WHERE IMPORTE >= 1500 AND IMPORTE <= 2000))


--13.- NOMBRE DEL CLIENTE QUE VIVE EN LA MISMA CIUDAD QUE SANTO 
SELECT NOMBRE_CLIENTE
FROM CLIENTE
WHERE CIUDAD_CLIENTE LIKE (SELECT CIUDAD_CLIENTE FROM CLIENTE WHERE NOMBRE_CLIENTE LIKE 'Santos') AND NOMBRE_CLIENTE NOT LIKE 'Santos'

--FUNCIONES AGREGADAS
--14 COUNT contar numero de clientes que viven en Peguerinos
SELECT COUNT(NOMBRE_CLIENTE) AS NumeroClientes 
FROM CLIENTE
WHERE CIUDAD_CLIENTE LIKE 'Peguerinos'
--15 AVG de saldos
SELECT AVG(SALDO) AS PromedioSaldo
FROM CUENTA
--16 SUMA de los saldos
SELECT SUM(SALDO) AS SumaSaldos
FROM CUENTA
--17 MAX de los saldos
SELECT MAX(SALDO) AS MaxSaldos
FROM CUENTA
--18 MIN de saldos
SELECT MIN(SALDO) AS MinSaldos
FROM CUENTA
--19 Ordenar ASCENDIENTE
SELECT ID_CLIENTE,NOMBRE_CLIENTE
FROM CLIENTE
ORDER BY NOMBRE_CLIENTE
--20 Ordenar DESCENDIENTE
SELECT ID_CLIENTE,NOMBRE_CLIENTE
FROM CLIENTE
ORDER BY NOMBRE_CLIENTE DESC
--21. ID_CLIENTE de cliente con cuenta de mayor saldo
SELECT ID_CLIENTE 
FROM CLI_CUENTA 
WHERE NUMERO_CUENTA IN
	(SELECT NUMERO_CUENTA 
	 FROM CUENTA 
	 WHERE SALDO IN 
		(SELECT MAX(SALDO) 
		 FROM CUENTA))
--22. NOMBRE_CLIENTE con importe de prestamo mas alto
SELECT NOMBRE_CLIENTE 
FROM CLIENTE 
WHERE ID_CLIENTE IN
	(SELECT ID_CLIENTE 
	FROM CLI_PREST 
	WHERE NUMERO_PRESTAMO IN
		(SELECT NUMERO_PRESTAMO 
		FROM PRESTAMO 
		WHERE IMPORTE IN 
			(SELECT MAX(IMPORTE) FROM PRESTAMO)))
--23. NOMBRE_CLIENTE y NOMBRE_CALLE de cliente que se le otorgo prestamo mas reciente 
SELECT NOMBRE_CLIENTE 
FROM CLIENTE 
WHERE ID_CLIENTE IN
	(SELECT ID_CLIENTE 
	FROM CLI_PREST 
	WHERE FECHA_PRESTAMO IN 
		(SELECT MAX(FECHA_PRESTAMO) FROM CLI_PREST))
--24. NOMBRE_CLIENTE Y CIUDAD_CLIENTE cuya cuenta es la mas antigua
SELECT NOMBRE_CLIENTE, CIUDAD_CLIENTE FROM CLIENTE WHERE ID_CLIENTE IN
(SELECT ID_CLIENTE FROM CLI_CUENTA WHERE FECHA_APERTURA IN (SELECT MIN(FECHA_APERTURA) FROM CLI_CUENTA))
--25. cuantos prestamos tiene la cliente con nombre Abril
SELECT COUNT(NUMERO_PRESTAMO) FROM PRESTAMO WHERE NUMERO_PRESTAMO IN
(SELECT NUMERO_PRESTAMO FROM CLI_PREST WHERE ID_CLIENTE IN (SELECT ID_CLIENTE FROM CLIENTE WHERE NOMBRE_CLIENTE LIKE 'Abril'))

--C26 CREAR INDICE PARA LA TABLA CLIENTE POR CIUDAD
CREATE INDEX IDX_CDCLIENTE ON CLIENTE(CIUDAD_CLIENTE)
CREATE INDEX IDX_CALLECLIENTE ON CLIENTE(CALLE_CLIENTE)

--27 NOMBRE Y CIUDAD DE LA MISMA CIUDAD DONDE VIVE LOPEZ (OJO, YA NO CONOCEMOS EL ID)
SELECT NOMBRE_CLIENTE, CIUDAD_CLIENTE
FROM CLIENTE
WHERE CIUDAD_CLIENTE LIKE
	(SELECT CIUDAD_CLIENTE FROM CLIENTE
	WHERE NOMBRE_CLIENTE LIKE 'López')
	AND NOMBRE_CLIENTE NOT LIKE 'López'

--28 Cambiar calle de 
UPDATE CLIENTE
SET CALLE_CLIENTE = 'Ocampo'
WHERE NOMBRE_CLIENTE LIKE 'Santos'

SELECT * FROM CLIENTE

--29 CAMBIAR CALLE DE ABRIL PARA QUE SEA LA MISMA DE SANTOS
UPDATE CLIENTE
SET CALLE_CLIENTE = (SELECT CALLE_CLIENTE FROM CLIENTE WHERE NOMBRE_CLIENTE LIKE 'Santos')
WHERE NOMBRE_CLIENTE LIKE 'Abril'

--30 AGREGAR ATRIBUTO SEXO CON VALOR M O F, VALIDAR LO ANTERIOR
ALTER TABLE CLIENTE
ADD SEXO CHAR
CHECK (SEXO IN ('M','F'))

UPDATE CLIENTE
SET SEXO = 'M'
WHERE NOMBRE_CLIENTE LIKE 'Santos' 
OR NOMBRE_CLIENTE LIKE 'Gomez'
OR NOMBRE_CLIENTE LIKE 'Gonzalez'
OR NOMBRE_CLIENTE LIKE 'Lopez'

UPDATE CLIENTE
SET SEXO = 'F'
WHERE NOMBRE_CLIENTE LIKE 'Abril' 
OR NOMBRE_CLIENTE LIKE 'Ruperez'

--32.- Cuantos hombres hay en el banco (clientes)
SELECT COUNT(*) AS NUM_HOMBRES 
FROM CLIENTE 
WHERE SEXO LIKE 'M'

--33.- Aumente un 5% el prestamo del cliente Gomez
UPDATE PRESTAMO
SET IMPORTE = IMPORTE + IMPORTE *.05
WHERE NUMERO_PRESTAMO LIKE (SELECT NUMERO_PRESTAMO
							FROM CLI_PREST
							WHERE ID_CLIENTE LIKE (SELECT ID_CLIENTE
													FROM CLIENTE
													WHERE NOMBRE_CLIENTE LIKE 'Gomez'))
--34.- Cambie la cd de Ruperez para que sea Torreon
UPDATE CLIENTE
SET CIUDAD_CLIENTE = 'Torreon'
WHERE NOMBRE_CLIENTE LIKE 'Ruperez' 
--35.- A cuanto asciende el total de todas las cuentas (saldo)
SELECT SUM(SALDO) AS totalDeSaldos
FROM CUENTA
--36.- Cuantos prestamos tiene Glz
SELECT COUNT (*) AS TOTAL_PRESTAMOS
FROM CLI_PREST
WHERE ID_CLIENTE IN (SELECT ID_CLIENTE FROM CLIENTE WHERE NOMBRE_CLIENTE LIKE 'GONZALEZ')

--37 ?
--38 Clientes que no tienen prestamos
SELECT NOMBRE_CLIENTE FROM CLIENTE WHERE ID_CLIENTE  NOT IN  (SELECT ID_CLIENTE FROM CLI_PREST) 

select C.nombre_cliente
from cliente as C, cli_prest as CP
where c.ID_CLIENTE not in (cp.ID_CLIENTE)